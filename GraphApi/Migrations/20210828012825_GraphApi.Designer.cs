// <auto-generated />
using System;
using GraphApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GraphApi.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20210828012825_GraphApi")]
    partial class GraphApi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GraphApi.Models.Chart", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("id");

                    b.ToTable("Charts");
                });

            modelBuilder.Entity("GraphApi.Models.Col", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Chartid");

                    b.Property<string>("label");

                    b.Property<string>("type");

                    b.HasKey("id");

                    b.HasIndex("Chartid");

                    b.ToTable("Col");
                });

            modelBuilder.Entity("GraphApi.Models.Row", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Chartid");

                    b.Property<string>("month");

                    b.Property<int>("point1");

                    b.Property<int>("point2");

                    b.Property<int>("point3");

                    b.HasKey("id");

                    b.HasIndex("Chartid");

                    b.ToTable("Row");
                });

            modelBuilder.Entity("GraphApi.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Users");

                    b.HasData(
                        new { id = 1, firstName = "Shalom", lastName = "Shalom", password = "nimda", username = "admin" }
                    );
                });

            modelBuilder.Entity("GraphApi.Models.Col", b =>
                {
                    b.HasOne("GraphApi.Models.Chart")
                        .WithMany("cols")
                        .HasForeignKey("Chartid");
                });

            modelBuilder.Entity("GraphApi.Models.Row", b =>
                {
                    b.HasOne("GraphApi.Models.Chart")
                        .WithMany("rows")
                        .HasForeignKey("Chartid");
                });
#pragma warning restore 612, 618
        }
    }
}
